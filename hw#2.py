#!/usr/bin/env python
# coding: utf-8

# ###### –ó–∞–¥–∞—á–∞ 1
# 
# –í–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ü–µ–ª—ã—Ö), –Ω–∞–π—Ç–∏ –∏—Ö –º–µ–¥–∏–∞–Ω—É ‚Äî —Å–µ—Ä–µ–¥–∏–Ω–Ω–æ–µ —á–∏—Å–ª–æ –ø—Ä–∏ –≤—ã—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏–∏ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é, –µ—Å–ª–∏ —á–∏—Å–ª–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–µ—á–µ—Ç–Ω–æ, –∏ —Å—Ä–µ–¥–Ω–µ–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–µ –¥–≤—É—Ö —Å–µ—Ä–µ–¥–∏–Ω–Ω—ã—Ö —á–∏—Å–µ–ª, –µ—Å–ª–∏ —á–∏—Å–ª–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —á–µ—Ç–Ω–æ.

# In[37]:


import random
n = 0
nums = []
size = int(input('Type the size of the list: '))
print ()

for i in range (size):
    n = random.random()
    nums.append(n)

nums.sort()
pos = size // 2
print ('Sorted list: ', nums, '\n')
if size % 2 != 0:
    print ('Median is: ', nums[pos+1])
else:
    me = ((nums[pos]+nums[pos+1])/2)
    print ('Arithmetic mean is: ', me)


# ###### –ó–∞–¥–∞—á–∞ 2
# 
# –ê–ª–∏—Å–∞ –∑–∞–≥–∞–¥–∞–ª–∞ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 0 –¥–æ 100 (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ). –£–≥–∞–¥–∞—Ç—å —ç—Ç–æ —á–∏—Å–ª–æ, –∏—Å–ø–æ–ª—å–∑—É—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –≤–∏–¥–∞ ‚Äú–≤–µ—Ä–Ω–æ –ª–∏, —á—Ç–æ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ ùë•?‚Äù.

# In[15]:


import random

Alisa = random.randint(0,100)
x=50
i=0
#print (Alisa)
if Alisa<x:
    x1 = 0
    x2 = 49
elif Alisa>x:
    x1 = 51
    x2 = 100

while i==0:
    if Alisa < x:
        print ("Alisa, is your number lower than {}? Answer yes or no.". format(x))
        print ('Yes', '\n')
        x2=x-1
    elif Alisa > x: 
        print ("Alisa, is your number lower than {}? Answer yes or no.". format(x))
        print ('No', '\n')
        x1=x+1
    else:
        print ("Alisa, is your number {}?". format(x))
        print ("Yes", '\n')
        print ('Gorgeous!')
        i=1
    x = x1+(x2-x1)//2
    #print (x1, x2)


# ###### –ó–∞–¥–∞—á–∞ 3
# 
# –î–∞–Ω–∞ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏–∑ ùëõ —á–∏—Å–µ–ª. –ü—Ä–∏–¥—É–º–∞—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º, –æ–ø—Ä–µ–¥–µ–ª—è—é—â–∏–π –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ª–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ, —Å–æ —Å–ª–æ–∂–Ω–æ—Å—Ç—å—é ùëú(ùëõ).

# In[7]:


def num_in(x, num):
    med = len(x) // 2
    x1 = 0
    x2 = len(x) - 1
    while x[med] != num and x1 <= x2:
        if num > x[med]:
            x1 = med + 1
        else:
            x2 = med - 1
        med = (x1 + x2) // 2
    if x1 > x2:
        print("No")
    else:
        print("Yes")   

l = [1, 2, 5, 7, 8, 11, 16]
m = 7
k = 3
num_in (l, m)
num_in (l, k)


# ###### –ó–∞–¥–∞—á–∞ 4
# 
# –í–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ü–µ–ª—ã—Ö), –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏—Ö –∞–ª–≥–æ—Ä–∏—Ç–º–æ–º –ø—É–∑—ã—Ä—å–∫–æ–≤–æ–π —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.

# In[10]:


def bubble(x):
    for k in range (len(x)):
        for i in range (len(x)-1):
            if x[i]>x[i+1]:
                x[i], x[i+1] = x[i+1], x[i]
    return (l)
l = [1, 15, 5, 7, 3, 7, 9, 2]
print(bubble(l))


# ###### –ó–∞–¥–∞—á–∞ 5
# 
# –í–≤–µ—Å—Ç–∏ –Ω—É–∫–ª–µ–æ—Ç–∏–¥–Ω—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –≤—ã–≤–µ—Å—Ç–∏ –µ–µ reverse-complement.

# In[6]:


seq = str(input('Enter sequence: '))
seq = seq.upper()
new_seq = ''
p=0
for i in seq:
    if i == 'A':
        new_seq+=("T")
    elif i == 'T':
        new_seq+=("A")
    elif i == 'G':
        new_seq+=("C")
    elif i == 'C':
        new_seq+=("G")
    else:
        print ('Your sequence has the wrong letter!')
        i+=1
if p==0:
    print('Reverse-complement sequence is', new_seq[::-1])


# In[ ]:




